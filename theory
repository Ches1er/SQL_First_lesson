Подключение к MySQL

В консоли: mysql -h 127.0.0.1 (необязательный параметр, т.к. по умолчанию хост всегда 127.0.0.1)
-u root(имя пользователя) -p (пароль, если он есть, если нет, то этот параметр просто опускается)
Если консоль при выполнении данной команды выдает ошибку (mysql не является исполняемым файлом и пр.) то необходимо на рабочем столе
кликнуть правой кнопкой по Мой Компьютер->Свойства->Дополнительные параметры системы->Переменные среды. Выбрать переменную PATH
и в нее добавить через точку с запятой путь к исполняемому файлу mysql 
(для ОпенСервера это c:\OSPanel\modules\database\MySQL-5.7-x64\bin\).

mysql -u root -p Обратите внимание, точка с запятой в цконце не ставятся. 

Посмотреть все существующие БД, которые есть на сервере:
SHOW DATABASES;

Создание новой базы:
CREATE DATABASE `name`; кавычки для экранирования имени, которые на букве "ё".

После имени указывается следующий параметр DEFAULT COLLATE utf_general_ci (т.е. указываем кодировку, иначе вместо кириллических букв
будут знаки "?").

Для выбора БД, как БД по-умолчанию, используется команда USE name;

Для просмотра таблиц:
SHOW TABLES

В БД встречаются не только классические таблицы, но также и именованные запросы, которые не хрнаят данные
и не являются таблицами, для просмотра типа, необходимо использовать SHOW FULL TABLES,
в таком случае добавляется колонка Table Type, в которой будет написано, таблица это или представление.

Синтаксис создания таблицы:
[] - не обязательная часть.
CREATE TABLE [IF NOT EXISTS (только в том случае, если таблицы несуществует)]
[[base_name.]shemename.]tablename](
    <COLUMN_DEFINITION>,...
    <CONSTRAINT_DEFINITION,...>
)[CHARSET charset][ENGINE={InnoDB|MyISAM}]

COLUMN_DEFINITION: columnname(имя колонки) columntype(тип данных в колонке)
[[NOT]NULL](нельзя указывать нуловое значение, или может быть пустой если без NOT)
[UNIQUE](будет создан уникальный индекс)
[DEFAULT defvalue](указывает какое будет вставлено значение в ячейку, если не будет
указано значение для вставки)[PRIMARY KEY](первичный ключ или нет)
[AUTO_INCREMENT](генератор значений)
[REFERENCES table(column)](указывается для описания внешних ключей)

Типы данных:
Целочисленные типы: TINYINT размером 1 байт (от -128 до 127) или UNSIGNED (от 0 до 255)
SMALLINT 2 байта (-32000 до 32000) или от 0 до 64000
INT - целое значение размером 4 байта (от -2 млн до 2 млн)
INT UNSIGNED (от 0 до 4 млн)
BIGINT 8 байт и BIGINT UNSIGNED 8 байт (только положительные)

С плавающей точкой: FLOAT вещественный тип объемом 8 байт
DOUBLE=FLOAT
Для хранения чисел в строковом представлении DECIMAL

Для хранение символов:
CHAR(N), где N - максимальная длина. Строка фиксированной длины, если даже запишем 1 символ, то бдет
храниться 255 символов, остальные будут пустые.
VARCHAR(N) - указывается мин кол-во символов и максимальное.
NVARCHAR - для поддержки юникода.
TEXT - любой текст объемом меньше чем 64000 символов.
MEDIUMTEXT - до 16 млн символов
LONGTEXT - 4 млрд

BLOB - для хранения в бинарном виде.

Тип данных для хранения даты:
DATE
DATETIME
TIMESTAMP
TIME
Очень редко используются. Для PHP удобно использовать Unix timestamp и хранить его в BIGINT.

Просто пример создания таблицы:
CREATE TABLE `users`(
    `id` INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(255)NOT NULL UNIQUE,
    `password` VARCHAR(255) NOT NULL
);

Удаление таблицы:
DROP TABLE `name`;

Посмотреть подробную информацию о созданной таблице:
SHOW CREATE TABLE users
или
DESCRIBE users;

Можно изменять таблицу, добавляя в нее колонки:
ALTER TABLE users ADD COLUMN `name` пишем COLUMN DEFINITION (добавляем новую колонку);
ALTER TABLE users DROP COLUMN `name` (удаляем колонку);

Вставляем записи в таблицу:

Понятие CRUD - create replace update delete;

Вставляем: INSERT INTO `users` SET `name`='Ivan', `password`='0000'; Названия таблицы и полей
экранируем кавычками на букве Ё, а значения в обычных.

Второй вариант вставки INSERT INTO `users` (`name`,`password`,`surname`) VALUES
('petya','0000','petrov'),
('ivan','1111','ivanov');

Удаление записей:
DELETE FROM `users` WHERE `name`='ivan';

Обновление записи:
UPDATE `users` SET `password`='zzzz' where `id`=4;

Полностью очистить таблицу:
TRUNCATE `users`;
